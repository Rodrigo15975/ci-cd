name: CI/CD to AWS ECR (Production Only)

on:
  push:
    branches: ['master']

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # Step 1: Checkout code
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Install dependencies
      - name: 📦 Install dependencies
        run: |
          echo "📥 Instalando dependencias..."
          npm install

      # Step 4: Build NestJS application
      - name: 🔧 Build application
        run: |
          echo "🔨 Construyendo aplicación NestJS..."
          npm run build

      # Step 5: Configure AWS credentials
      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 6: Log in to Amazon ECR
      - name: 🔑 Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 7: Build, tag, and push Docker image to ECR
      - name: 🚀 Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |

          # Usa el SHA del commit para el tag
          VERSION=$(git rev-parse --short HEAD)
          echo "🚧 Construyendo imagen Docker con commit SHA $VERSION..."

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
          # ↑ Usa el SHA del commit como el tag de la imagen Docker

          echo "📦 Pusheando imagen a ECR con commit SHA $VERSION..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          # ↑ Subes la imagen con el tag basado en el commit SHA



          echo "✅ Imagen construida y subida a ECR."

        # 8. Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          echo "🚀 Actualizando kubeconfig..."
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

        # 9. Update Deployment in EKS (only image)
      - name: Update image in EKS Deployment
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "🚀 Actualizando imagen del deployment..."
          kubectl set image deployment/${{ secrets.K8S_DEPLOYMENT_NAME }} \
            ${{ secrets.K8S_CONTAINER_NAME }}=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
